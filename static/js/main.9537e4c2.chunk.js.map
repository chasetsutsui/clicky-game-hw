{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["Card","props","className","onClick","handleClick","id","role","aria-label","alt","name","src","image","Wrapper","children","Title","App","state","friends","score","topScore","handleCorrectGuess","newData","newScore","newTopScore","Math","max","setState","shuffleData","topSCore","console","log","handleIncorrectguess","resetData","map","item","clicked","i","length","j","floor","random","temp","handleItemClick","guessedCorrectly","newItem","this","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"0vFAyBeA,MAtBf,SAAcC,GACZ,OACE,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,YAAYH,EAAMI,MAC3D,yBAAKH,UAAU,iBACb,yBACEI,KAAK,MACLC,aAAW,eAEb,yBAAKC,IAAKP,EAAMQ,KAAMC,IAAKT,EAAMU,SAEnC,yBAAKT,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMQ,U,MCT3BG,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,MCG1BC,MAJf,SAAeb,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMY,W,OCgGvBE,E,2MA1FbC,MAAQ,CACNC,UACAC,MAAO,EACPC,SAAU,G,EASZC,mBAAqB,SAAAC,GAAY,IAAD,EACF,EAAKL,MAAzBG,EADsB,EACtBA,SACFG,EAFwB,EACZJ,MACO,EACnBK,EAAcC,KAAKC,IAAIH,EAAUH,GAEvC,EAAKO,SAAS,CACZT,QAAS,EAAKU,YAAYN,GAC1BH,MAAOI,EACPM,SAAUL,IAEZM,QAAQC,IAAIR,I,EAGdS,qBAAuB,SAAAd,GACrB,EAAKS,SAAS,CACZT,QAAS,EAAKe,UAAUf,GACxBC,MAAO,K,EAIXc,UAAY,SAAAf,GACV,IAAMe,EAAYf,EAAQgB,KAAI,SAAAC,GAAI,sBAAUA,EAAV,CAAgBC,SAAS,OAC3D,OAAO,EAAKR,YAAYK,I,EAG1BL,YAAc,SAAAV,GAEZ,IADA,IAAImB,EAAInB,EAAQoB,OAAS,EAClBD,EAAI,GAAG,CACZ,IAAME,EAAId,KAAKe,MAAMf,KAAKgB,UAAYJ,EAAI,IACpCK,EAAOxB,EAAQmB,GACrBnB,EAAQmB,GAAKnB,EAAQqB,GACrBrB,EAAQqB,GAAKG,EACbL,IAIF,OAAOnB,G,EAITyB,gBAAkB,SAAArC,GAChB,IAAIsC,GAAmB,EACjBtB,EAAU,EAAKL,MAAMC,QAAQgB,KAAI,SAAAC,GACrC,IAAMU,EAAO,eAAQV,GAQrB,OAPIU,EAAQvC,KAAOA,IACZuC,EAAQT,UACXS,EAAQT,SAAU,EAClBQ,GAAmB,IAIhBC,KAETD,EACI,EAAKvB,mBAAmBC,GACxB,EAAKU,qBAAqBV,I,mFA3D9BwB,KAAKnB,SAAS,CAAET,QAAS4B,KAAKlB,YAAYkB,KAAK7B,MAAMC,a,+BA+D7C,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,oBAAoB,6BAApB,WAAsC4B,KAAK7B,MAAME,OAChD2B,KAAK7B,MAAMC,QAAQgB,KAAI,SAAAa,GAAM,OAC5B,kBAAC,EAAD,CACEzC,GAAIyC,EAAOzC,GACX0C,IAAKD,EAAOzC,GACZI,KAAMqC,EAAOrC,KACbE,MAAOmC,EAAOnC,MACdP,YAAa,EAAKsC,0B,GAnFZM,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9537e4c2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card\" onClick={() => props.handleClick(props.id)}>\n      <div className=\"img-container\">\n        <div\n          role=\"img\"\n          aria-label=\"click item\"\n        />\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\n\nexport default Card;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    topScore: 0\n  };\n\n\n  componentDidMount() {\n    this.setState({ friends: this.shuffleData(this.state.friends) });\n\n  }\n\n  handleCorrectGuess = newData => {\n    const { topScore, score } = this.state;\n    const newScore = score + 1;\n    const newTopScore = Math.max(newScore, topScore);\n\n    this.setState({\n      friends: this.shuffleData(newData),\n      score: newScore,\n      topSCore: newTopScore\n    });\n    console.log(newScore);\n  };\n\n  handleIncorrectguess = friends => {\n    this.setState({\n      friends: this.resetData(friends),\n      score: 0\n    });\n  }\n\n  resetData = friends => {\n    const resetData = friends.map(item => ({ ...item, clicked: false }));\n    return this.shuffleData(resetData);\n  };\n\n  shuffleData = friends => {\n    let i = friends.length - 1;\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = friends[i];\n      friends[i] = friends[j];\n      friends[j] = temp;\n      i--;\n\n    }\n\n    return friends;\n\n  };\n\n  handleItemClick = id => {\n    let guessedCorrectly = false;\n    const newData = this.state.friends.map(item => {\n      const newItem = { ...item };\n      if (newItem.id === id) {\n        if (!newItem.clicked) {\n          newItem.clicked = true;\n          guessedCorrectly = true;\n\n        }\n      }\n      return newItem;\n    });\n    guessedCorrectly\n      ? this.handleCorrectGuess(newData)\n      : this.handleIncorrectguess(newData);\n\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title >clicky game <br></br> Score: {this.state.score}</Title>\n        {this.state.friends.map(friend => (\n          <Card\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            handleClick={this.handleItemClick}\n\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}